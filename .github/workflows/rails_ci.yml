name: Rails CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [main]
    types: [ opened, reopened, synchronize, ready_for_review ]
  workflow_call:
    secrets:
      CC_TEST_REPORTER_ID:
        description: 'Code Climate Reporter ID for current repo'
        required: false

env:
  RAILS_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    services:
      postgres:
        image: postgres:13
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"

    steps:
      - uses: actions/checkout@v3

      - name: Install ruby gems
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_WITHOUT: 'vips'
        with:
          bundler-cache: true

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run Rspec & publish code coverage
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: bundle exec rspec spec/